---  
- name: upgrade all packages
  yum: name=* state=latest
  
- name: install x86 oracle dependencies
  yum: name={{ item }} state=present
  with_items:
    - xauth 
    - unzip 
    - libselinux-python 
    - xorg-x11-utils 
    - compat-libcap1 
    - compat-libstdc++-33 
    - libaio-devel 
    - ksh 
    - redhat-lsb-core 
    - elfutils-libelf-devel 
    - xorg-x11-apps
    - gcc
    - gcc-c++
     
- name: oracle-recommended sysctl
  sysctl:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    state: present
    ignoreerrors: yes # Ignore errors about unknown keys
  with_items:
    - { name: "kernel.shmall", value: "2097152" }
    - { name: "kernel.shmmax", value: "1050470400" }
    - { name: "kernel.shmmni", value: "4096" }
    - { name: "kernel.sem", value: "250 32000 100 128" }
    - { name: "fs.file-max", value: "6815744" }
    - { name: "fs.aio-max-nr", value: "1048576" }
    - { name: "net.ipv4.ip_local_port_range", value: "9000 65500" }
    - { name: "net.core.rmem_default", value: "262144" }
    - { name: "net.core.rmem_max", value: "4194304" }
    - { name: "net.core.wmem_default", value: "262144" }
    - { name: "net.core.wmem_max", value: "1048576" }
    - { name: "net.ipv6.conf.all.disable_ipv6", value: "1" }
    - { name: "net.ipv6.conf.default.disable_ipv6", value: "1" }

- name: save sysctl config
  command: sysctl -p
  ignore_errors: yes # because apparently the default centos config is invalid!

# it's in the oracle recommendations. i don't even know.
- name: oracle-recommended PAM config
  lineinfile:
    dest: /etc/pam.d/login
    state: present
    line: "session required pam_limits.so"

- name: oracle-recommended security limits
  lineinfile:
    dest: /etc/security/limits.conf
    state: present
    line: "{{ item }}"
  with_items:
    - "oracle soft nproc 2047"
    - "oracle hard nproc 16384"
    - "oracle soft nofile 1024"
    - "oracle hard nofile 65536"

- name: create the oracle installation path
  file:
    path: "{{ oracle_path }}"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    mode: 0755
    recurse: yes
    state: directory

- name: set oracle user environment
  lineinfile: dest=/home/{{ oracle_user }}/.bashrc state=present line="{{ item }}"
  with_items:
    - "export ORACLE_BASE={{ ora_user_env.ORACLE_BASE }}"
    - "export ORACLE_SID={{ ora_user_env.ORACLE_SID }}"
    - "export ORACLE_HOME={{ ora_user_env.ORACLE_HOME }}"
    - "export PATH=$PATH:$ORACLE_HOME/bin"

#
# install oracle
#

- name: check if oracle has already been installed
  stat: path=/etc/oratab
  register: oracle_installed
   
- name: compose the oracle automated installer settings
  template:
    src: db_installSoftwareOnly.rsp.j2
    dest: "/tmp/db_install.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"

- name: unarchive Oracle Database installer
  unarchive: src="{{ item.src }}"
             dest="{{ oracle_tmp }}"
             creates="{{ item.creates }}"
  with_items:
    - "{{ oracle_db_archives }}"

- name: install oracle
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  command: "{{ oracle_tmp }}/database/runInstaller -silent -force -ignoreSysPrereqs -ignorePrereq -waitforcompletion -responseFile /tmp/db_install.rsp"
  ignore_errors: yes
  when: not oracle_installed.stat.exists  

- name: general oracle post-installation
  command: "{{ oracle_inventory }}/orainstRoot.sh"
  when: not oracle_installed.stat.exists
    
- name: db-specific oracle post-installation
  command: "{{ ora_user_env.ORACLE_HOME }}/root.sh"
  when: not oracle_installed.stat.exists
    
- name: compose the oracle netca installer settings
  template:
    src: netca.rsp.j2
    dest: "/tmp/netca.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    
- name: configure netca
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  command: "{{ oracle_db_basename }}/bin/netca /silent /responsefile /tmp/netca.rsp"

- name: compose the oracle dbca installer settings
  template:
    src: dbca.rsp.j2
    dest: "/tmp/dbca.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"
    
- name: configure dbca
  become_user: "{{ oracle_user }}"
  environment: "{{ ora_user_env }}"
  command: "{{ oracle_db_basename }}/bin/dbca -silent -responseFile /tmp/dbca.rsp"
    
- name: set oracle to autostart
  lineinfile:
    dest: /etc/oratab
    state: present
    regexp: "^{{ oracle_db_name }}"
    line: "{{ oracle_db_name }}:{{ ora_user_env.ORACLE_HOME }}:Y"

- name: compose the oracle init.d script
  template: src=oracle_init.j2 dest=/etc/init.d/oracle mode=0755

- name: register and start up the oracle service
  service: name=oracle state=restarted enabled=yes