---

- name: Check if Web Tier has been previously configured
  stat: path={{ webtier_configured }}
  register: st

- include: startAdminServer.yml
  when: not st.stat.exists and {{ webtier_wls_associate }}

- name: compose the oracle automated configure settings
  template:
    src: wt_configureSoftwareOnly.rsp.j2
    dest: "/tmp/wt_configureSoftwareOnly.rsp"
    owner: "{{ oracle_user }}"
    group: "{{ oracle_group }}"

- name: configure WebTier
  become_user: "{{ oracle_user }}"
  command: "{{wt_home}}/bin/config.sh -ignoreSysPrereqs -waitforcompletion -silent -response /tmp/wt_configureSoftwareOnly.rsp"
  when: not st.stat.exists  

- name: update cgi-bin/printenv to use correct perl 
  lineinfile: dest="{{ wt_instance_home }}/config/OHS/ohs1/cgi-bin/printenv" regexp="^#!/usr/local/bin/perl" line="#!/usr/bin/perl" mode=700
  when: not st.stat.exists  

- name: compose the OHS VirtualHost config
  template: src="{{ item.src }}" dest="{{ item.dest }}" owner="{{ oracle_user }}" group="{{ oracle_group }}"
  with_items:
     - { src: 'moduleconf/auth.conf.j2', dest: '{{ wt_instance_home }}/config/OHS/ohs1/moduleconf/auth.conf' }
  when: not st.stat.exists  

- name: Configure NodeManager Properties
  lineinfile: dest="{{ wt_instance_home }}/config/OHS/ohs1/httpd.conf" state=present line="{{ item }}" insertafter="^OraAuditEnable On"
  with_items:
     - "NameVirtualHost *:7777"
  when: not st.stat.exists  

- name: Stop WebTier
  become_user: "{{ oracle_user }}"
  command: "{{ wt_instance_home }}/bin/opmnctl stopall"
  # when: not st.stat.exists  

- name: Wait for the OHS service to stop
  wait_for: port="{{ ohs_vh_auth_port }}" delay=10 state=drained
  when: not st.stat.exists  
  
- name: Start WebTier
  become_user: "{{ oracle_user }}"
  command: "{{ wt_instance_home }}/bin/opmnctl startall"
  when: not st.stat.exists  

- name: Wait for the OHS service to start
  wait_for: port="{{ ohs_vh_auth_port }}" delay=10   
  when: not st.stat.exists  

- name: touch '{{ webtier_configured }}'
  file: path={{ webtier_configured }} state=touch owner={{ oracle_user }} group={{ oracle_group }} mode=0555
  when: not st.stat.exists
